/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    products: Product;
    categories: Category;
    announcements: Announcement;
    coupons: Coupon;
    subscribers: Subscriber;
    orders: Order;
    goals: Goal;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    products: ProductsSelect<false> | ProductsSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    announcements: AnnouncementsSelect<false> | AnnouncementsSelect<true>;
    coupons: CouponsSelect<false> | CouponsSelect<true>;
    subscribers: SubscribersSelect<false> | SubscribersSelect<true>;
    orders: OrdersSelect<false> | OrdersSelect<true>;
    goals: GoalsSelect<false> | GoalsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    'hero-banner-global': HeroBannerGlobal;
  };
  globalsSelect: {
    'hero-banner-global': HeroBannerGlobalSelect<false> | HeroBannerGlobalSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  firstName: string;
  lastName: string;
  phone: string;
  role: 'admin' | 'user';
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: string;
  /**
   * Product name (e.g., Premium Whey Protein Isolate)
   */
  name: string;
  slug: string;
  /**
   * Choose how to add main product image
   */
  imageType: 'upload' | 'url';
  /**
   * Upload main product image
   */
  mainImage?: (string | null) | Media;
  /**
   * Main product image URL
   */
  imageUrl?: string | null;
  /**
   * Additional product images (max 10)
   */
  additionalImages?:
    | {
        imageType?: ('upload' | 'url') | null;
        image?: (string | null) | Media;
        imageUrl?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Auto-populated from individual image fields
   */
  images?:
    | {
        url?: string | null;
        imageType?: string | null;
        id?: string | null;
      }[]
    | null;
  image?: string | null;
  /**
   * Product rating (0-5 stars)
   */
  rating?: number | null;
  /**
   * Number of customer reviews
   */
  reviews?: number | null;
  /**
   * Current selling price in rupees
   */
  price: number;
  /**
   * Original price before discount (optional)
   */
  originalPrice?: number | null;
  /**
   * Check if product is on sale
   */
  onSale?: boolean | null;
  /**
   * Select category or choose Other to type new one
   */
  category:
    | 'SPORTS NUTRITION'
    | 'VITAMINS & SUPPLEMENTS'
    | 'AYURVEDA & HERBS'
    | 'HEALTH FOOD & DRINKS'
    | 'FITNESS'
    | 'WELLNESS'
    | 'other';
  /**
   * Type new category name if you selected Other above
   */
  customCategory?: string | null;
  /**
   * Select subcategory or choose Other to type new one
   */
  subcategory?:
    | (
        | 'Proteins'
        | 'Gainers'
        | 'Pre/Post Workout'
        | 'Fat Burners'
        | 'Amino Acids'
        | 'Omega Fatty Acids'
        | 'Multivitamins'
        | 'Herbs for Weight Loss'
        | 'Vital Herbs'
        | 'Weight Loss Foods'
        | 'Health Juices'
        | 'Gym Accessories'
        | 'Fitness Trackers'
        | 'Skin Care'
        | 'Hair Care'
        | 'other'
      )
    | null;
  /**
   * Type new subcategory name if you selected Other above
   */
  customSubcategory?: string | null;
  /**
   * Select brand or choose Other to type new one
   */
  brand:
    | 'ALPINO'
    | 'AS-IT-IS'
    | 'AVVATAR'
    | 'AESTHETIC NUTRITION'
    | 'BOLT'
    | 'BPI'
    | 'BEAST LIFE'
    | 'DYMATIZE'
    | 'FAST AND UP'
    | 'GASPARI'
    | 'GAT'
    | 'GNC'
    | 'GHOST'
    | 'HEALTH FARM'
    | 'INTERNATIONAL PROTEIN'
    | 'ISOPURE'
    | 'KAGED'
    | 'KEVIN LEVRONE'
    | 'LABRADA'
    | 'MONSTER LAB'
    | 'MUSCLE BLAZE'
    | 'MUSCLETECH'
    | 'MUTANT'
    | 'MYFITNESS'
    | 'MYFITNESS PEANUT BUTTER'
    | 'NEUHERBS'
    | 'NAKPRO'
    | 'ONE SCIENCE'
    | 'ON (OPTIMUM NUTRITION)'
    | 'POLE NUTRITION'
    | 'PROSUPPS'
    | 'PINTOLA'
    | 'RONNIE COLEMAN'
    | 'RAW NUTRITION'
    | 'RYSE'
    | 'THE WHOLE TRUTH NUTRITION'
    | 'WELLBEING'
    | 'XTEND'
    | 'YOGABAR'
    | 'RANBDS'
    | 'APPLIED NUTRITION'
    | 'BSN'
    | 'DENIS JAMES'
    | 'DEXTER JACKSON'
    | 'EXALT'
    | 'INSANE LABZ'
    | 'MHP'
    | 'MI (MUSCLE IMPACT NUTRITION) 02 BRAND'
    | 'NOW'
    | 'NUTREX'
    | 'NUTRAMARC'
    | 'REDCON'
    | 'RULE ONE'
    | 'UNIVERSAL'
    | 'ATOM'
    | 'TRUE BASICS'
    | 'CLOMA PHARMA'
    | 'CENTRUM'
    | 'CONDEMNED'
    | 'MUSCLEMEDS'
    | 'ULTIMATE NUTRITION'
    | 'FA ICE HYDRO'
    | 'ANDROPIQUE'
    | 'CUREGARDEN'
    | 'TATA 1MG'
    | 'ACE BLEND'
    | 'NATUREYZ'
    | 'HEALTHYHEY NUTRITION'
    | 'MIDUTY'
    | 'WHATS UP WELLNESS'
    | 'MYODROL'
    | 'CARBAMIDE FORTE'
    | 'BEAUTYWISE'
    | 'FUEL ONE'
    | 'NAKPRO PROTEIN'
    | 'other';
  /**
   * Type new brand name if you selected Other above
   */
  customBrand?: string | null;
  /**
   * Check if this is a featured product
   */
  featured?: boolean | null;
  /**
   * Check if this is a trending product
   */
  trending?: boolean | null;
  /**
   * Mark as best seller product
   */
  bestSeller?: boolean | null;
  /**
   * Mark as loved by experts product
   */
  lovedByExperts?: boolean | null;
  /**
   * Select the fitness goal this product helps achieve
   */
  shopByGoal?: ('MUSCLE_GAIN' | 'WEIGHT_LOSS' | 'ENERGY_PERFORMANCE' | 'HEALTH_WELLNESS') | null;
  /**
   * Detailed product description
   */
  description?: string | null;
  /**
   * Product certifications
   */
  certifications?:
    | {
        /**
         * Certification name
         */
        name?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Nutrition facts per serving
   */
  nutritionInfo?: {
    /**
     * Serving size (e.g., 30g (1 scoop))
     */
    servingSize?: string | null;
    /**
     * Number of servings per container (e.g., 33)
     */
    servingsPerContainer?: number | null;
    /**
     * Protein content (e.g., 25g)
     */
    protein?: string | null;
    /**
     * Carbs content (e.g., 2g)
     */
    carbohydrates?: string | null;
    /**
     * Fat content (e.g., 0.5g)
     */
    fat?: string | null;
    /**
     * Calories per serving (e.g., 110)
     */
    calories?: number | null;
    /**
     * Sodium content (e.g., 50mg)
     */
    sodium?: string | null;
    /**
     * Calcium content (e.g., 120mg)
     */
    calcium?: string | null;
  };
  /**
   * Nutrition facts image
   */
  nutritionImage?: (string | null) | Media;
  /**
   * Product ingredients list
   */
  ingredients?:
    | {
        /**
         * Ingredient name (e.g., Whey Protein Isolate)
         */
        name?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Comma-separated flavors for simple variants (e.g., Chocolate, Vanilla, Strawberry)
   */
  simpleFlavors?: string | null;
  /**
   * Product variants with individual pricing (flavors, sizes, etc.)
   */
  variants?:
    | {
        /**
         * Flavor name (e.g., Chocolate, Vanilla, Strawberry)
         */
        flavor?: string | null;
        /**
         * Weight (e.g., 250g, 500g, 1kg)
         */
        weight?: string | null;
        /**
         * Price for this variant (e.g., 4199)
         */
        price?: number | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Upsell offers - products that complement this product
   */
  upsells?:
    | {
        /**
         * Select the product to offer as upsell
         */
        upsellProduct: string | Product;
        /**
         * Discount percentage when both products are purchased together
         */
        discountPercentage: number;
        /**
         * Short description of why these products work well together
         */
        description?: string | null;
        /**
         * Enable/disable this upsell offer
         */
        active?: boolean | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: string;
  /**
   * Category name (e.g., SPORTS NUTRITION)
   */
  name: string;
  /**
   * URL-friendly slug (e.g., sports-nutrition)
   */
  slug: string;
  /**
   * Optional category description
   */
  description?: string | null;
  /**
   * Category image URL (optional)
   */
  image?: string | null;
  /**
   * Subcategories for this main category
   */
  subcategories?:
    | {
        /**
         * Subcategory name (e.g., Proteins)
         */
        name: string;
        /**
         * URL-friendly slug (e.g., proteins)
         */
        slug: string;
        /**
         * Optional subcategory description
         */
        description?: string | null;
        /**
         * Subcategory image URL (optional)
         */
        image?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Order for displaying categories (lower numbers first)
   */
  displayOrder?: number | null;
  /**
   * Show/hide this category in menus
   */
  isActive?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "announcements".
 */
export interface Announcement {
  id: string;
  /**
   * Title for the announcement (for admin reference)
   */
  title: string;
  /**
   * The announcement text to display
   */
  text: string;
  /**
   * Toggle to show/hide this announcement
   */
  isActive?: boolean | null;
  /**
   * Background color for the announcement bar
   */
  backgroundColor?: ('orange' | 'blue' | 'green' | 'red' | 'purple' | 'black' | 'custom') | null;
  /**
   * Custom background color (hex code like #FF5733)
   */
  customBackgroundColor?: string | null;
  /**
   * Text color for the announcement
   */
  textColor?: ('white' | 'black' | 'gray' | 'custom') | null;
  /**
   * Custom text color (hex code like #FFFFFF)
   */
  customTextColor?: string | null;
  /**
   * Optional link URL (leave empty for no link)
   */
  link?: string | null;
  /**
   * Priority order (higher numbers show first)
   */
  priority?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "coupons".
 */
export interface Coupon {
  id: string;
  /**
   * Unique coupon code (e.g., WELCOME10)
   */
  code: string;
  /**
   * Display title for the coupon
   */
  title: string;
  /**
   * Description of the coupon offer
   */
  description?: string | null;
  discountType: 'percentage' | 'fixed' | 'free_shipping';
  /**
   * Discount value (percentage or fixed amount in INR)
   */
  discountValue: number;
  /**
   * Minimum order value required to use this coupon (in INR)
   */
  minimumOrderValue?: number | null;
  /**
   * Maximum discount amount for percentage coupons (in INR)
   */
  maximumDiscountAmount?: number | null;
  /**
   * Maximum number of times this coupon can be used (leave empty for unlimited)
   */
  usageLimit?: number | null;
  /**
   * Number of times this coupon has been used
   */
  usageCount?: number | null;
  /**
   * Maximum uses per user (leave empty for unlimited)
   */
  userLimit?: number | null;
  /**
   * Whether this coupon is currently active
   */
  isActive?: boolean | null;
  /**
   * When this coupon becomes active
   */
  startsAt?: string | null;
  /**
   * When this coupon expires
   */
  expiresAt?: string | null;
  /**
   * Categories this coupon applies to (leave empty for all categories)
   */
  applicableCategories?: (string | Category)[] | null;
  /**
   * Specific products this coupon applies to (leave empty for all products)
   */
  applicableProducts?: (string | Product)[] | null;
  /**
   * Products excluded from this coupon
   */
  excludedProducts?: (string | Product)[] | null;
  /**
   * Only available for first-time users
   */
  firstTimeUserOnly?: boolean | null;
  /**
   * Show this coupon in the available coupons list on cart page
   */
  showOnCart?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "subscribers".
 */
export interface Subscriber {
  id: string;
  email: string;
  phone?: string | null;
  subscribedAt?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * 📋 Customer Orders
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders".
 */
export interface Order {
  id: string;
  /**
   * Unique order number (e.g., ORD-2024-001)
   */
  orderNumber: string;
  /**
   * Customer email
   */
  customerEmail: string;
  /**
   * User ID for linking orders to users
   */
  userId?: string | null;
  /**
   * 📦 ORDER ITEMS - Summary of all items
   */
  itemsSummary?: string | null;
  /**
   * Order items (detailed)
   */
  items: {
    id: string;
    name: string;
    price: number;
    quantity: number;
    /**
     * Product flavor (e.g., mango, chocolate)
     */
    flavor?: string | null;
    /**
     * Product weight (e.g., 250gm, 1kg)
     */
    weight?: string | null;
    /**
     * Other product variations
     */
    variant?: string | null;
  }[];
  /**
   * 💰 ORDER SUMMARY - Pricing and payment details
   */
  orderSummary?: string | null;
  subtotal: number;
  total: number;
  shippingCost?: number | null;
  couponCode?: string | null;
  discount?: number | null;
  deliveryMethod: 'standard' | 'express' | 'overnight';
  paymentMethod: 'CARD' | 'UPI' | 'COD';
  /**
   * 📍 SHIPPING ADDRESS - Complete delivery address
   */
  shippingAddress: string;
  /**
   * Order notes or special instructions
   */
  notes?: string | null;
  /**
   * 📦 TRACKING INFO - Add tracking details for customer
   */
  tracking: {
    /**
     * 📋 Current order status
     */
    status:
      | 'pending'
      | 'confirmed'
      | 'processing'
      | 'shipped'
      | 'in_transit'
      | 'out_for_delivery'
      | 'delivered'
      | 'cancelled'
      | 'returned'
      | 'refunded';
    /**
     * 🔢 Enter tracking number here
     */
    trackingNumber?: string | null;
    /**
     * 🚚 Select shipping company
     */
    carrier?: ('bluedart' | 'delhivery' | 'dtdc' | 'ekart' | 'fedex' | 'indiapost' | 'other') | null;
    /**
     * 📅 When was it shipped?
     */
    shippedDate?: string | null;
    /**
     * 📅 Expected delivery date
     */
    estimatedDelivery?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "goals".
 */
export interface Goal {
  id: string;
  /**
   * Goal name (e.g., Build Muscle)
   */
  name: string;
  /**
   * URL-friendly slug (e.g., build-muscle)
   */
  slug: string;
  /**
   * Internal value used in products (e.g., MUSCLE_GAIN)
   */
  value: string;
  /**
   * Goal description
   */
  description?: string | null;
  /**
   * Goal image URL
   */
  image?: string | null;
  /**
   * Order for displaying goals (lower numbers first)
   */
  displayOrder?: number | null;
  /**
   * Show/hide this goal
   */
  isActive?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'products';
        value: string | Product;
      } | null)
    | ({
        relationTo: 'categories';
        value: string | Category;
      } | null)
    | ({
        relationTo: 'announcements';
        value: string | Announcement;
      } | null)
    | ({
        relationTo: 'coupons';
        value: string | Coupon;
      } | null)
    | ({
        relationTo: 'subscribers';
        value: string | Subscriber;
      } | null)
    | ({
        relationTo: 'orders';
        value: string | Order;
      } | null)
    | ({
        relationTo: 'goals';
        value: string | Goal;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  firstName?: T;
  lastName?: T;
  phone?: T;
  role?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products_select".
 */
export interface ProductsSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  imageType?: T;
  mainImage?: T;
  imageUrl?: T;
  additionalImages?:
    | T
    | {
        imageType?: T;
        image?: T;
        imageUrl?: T;
        id?: T;
      };
  images?:
    | T
    | {
        url?: T;
        imageType?: T;
        id?: T;
      };
  image?: T;
  rating?: T;
  reviews?: T;
  price?: T;
  originalPrice?: T;
  onSale?: T;
  category?: T;
  customCategory?: T;
  subcategory?: T;
  customSubcategory?: T;
  brand?: T;
  customBrand?: T;
  featured?: T;
  trending?: T;
  bestSeller?: T;
  lovedByExperts?: T;
  shopByGoal?: T;
  description?: T;
  certifications?:
    | T
    | {
        name?: T;
        id?: T;
      };
  nutritionInfo?:
    | T
    | {
        servingSize?: T;
        servingsPerContainer?: T;
        protein?: T;
        carbohydrates?: T;
        fat?: T;
        calories?: T;
        sodium?: T;
        calcium?: T;
      };
  nutritionImage?: T;
  ingredients?:
    | T
    | {
        name?: T;
        id?: T;
      };
  simpleFlavors?: T;
  variants?:
    | T
    | {
        flavor?: T;
        weight?: T;
        price?: T;
        id?: T;
      };
  upsells?:
    | T
    | {
        upsellProduct?: T;
        discountPercentage?: T;
        description?: T;
        active?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  description?: T;
  image?: T;
  subcategories?:
    | T
    | {
        name?: T;
        slug?: T;
        description?: T;
        image?: T;
        id?: T;
      };
  displayOrder?: T;
  isActive?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "announcements_select".
 */
export interface AnnouncementsSelect<T extends boolean = true> {
  title?: T;
  text?: T;
  isActive?: T;
  backgroundColor?: T;
  customBackgroundColor?: T;
  textColor?: T;
  customTextColor?: T;
  link?: T;
  priority?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "coupons_select".
 */
export interface CouponsSelect<T extends boolean = true> {
  code?: T;
  title?: T;
  description?: T;
  discountType?: T;
  discountValue?: T;
  minimumOrderValue?: T;
  maximumDiscountAmount?: T;
  usageLimit?: T;
  usageCount?: T;
  userLimit?: T;
  isActive?: T;
  startsAt?: T;
  expiresAt?: T;
  applicableCategories?: T;
  applicableProducts?: T;
  excludedProducts?: T;
  firstTimeUserOnly?: T;
  showOnCart?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "subscribers_select".
 */
export interface SubscribersSelect<T extends boolean = true> {
  email?: T;
  phone?: T;
  subscribedAt?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders_select".
 */
export interface OrdersSelect<T extends boolean = true> {
  orderNumber?: T;
  customerEmail?: T;
  userId?: T;
  itemsSummary?: T;
  items?:
    | T
    | {
        id?: T;
        name?: T;
        price?: T;
        quantity?: T;
        flavor?: T;
        weight?: T;
        variant?: T;
      };
  orderSummary?: T;
  subtotal?: T;
  total?: T;
  shippingCost?: T;
  couponCode?: T;
  discount?: T;
  deliveryMethod?: T;
  paymentMethod?: T;
  shippingAddress?: T;
  notes?: T;
  tracking?:
    | T
    | {
        status?: T;
        trackingNumber?: T;
        carrier?: T;
        shippedDate?: T;
        estimatedDelivery?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "goals_select".
 */
export interface GoalsSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  value?: T;
  description?: T;
  image?: T;
  displayOrder?: T;
  isActive?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * Single dynamic hero banner for the homepage
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "hero-banner-global".
 */
export interface HeroBannerGlobal {
  id: string;
  /**
   * Turn banner ON/OFF
   */
  isActive?: boolean | null;
  /**
   * Banner click link (href)
   */
  bannerLink?: string | null;
  /**
   * Desktop banner image
   */
  desktopImage: string | Media;
  /**
   * Mobile banner image
   */
  mobileImage?: (string | null) | Media;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "hero-banner-global_select".
 */
export interface HeroBannerGlobalSelect<T extends boolean = true> {
  isActive?: T;
  bannerLink?: T;
  desktopImage?: T;
  mobileImage?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}